akka {
  #loggers = ["de.heikoseeberger.akkalog4j.Log4jLogger"]
  #logging-filter = "de.heikoseeberger.akkalog4j.Log4jLoggingFilter"

  #loggers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jLogger"]

  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

#  loggers = ["akka.event.jul.JavaLogger"]
#  logging-filter = "akka.event.jul.JavaLoggingFilter"

  logger-startup-timeout = 20s
  log-level = INFO

  actor {
    guardian-supervisor-strategy = "com.example.infrastructure.akka.ProducerSupervisorStrategy"
  }

  kafka {
    bootstrap.servers = "kafka1.example.com:9092,kafka2.example.com:9092,kafka3.example.com:9092"
    bootstrap.servers = ${?KAFKA_HOSTS}

    producer {
      parallelism = 100
      close-timeout = 60s
      use-dispatcher = "akka.kafka.default-dispatcher"

      kafka-clients {
        acks = all
        acks = ${?KAFKA_ACKS}
        batch.size = 16384
        bootstrap.servers = "kafka1.example.com:9092,kafka2.example.com:9092,kafka3.example.com:9092"
        bootstrap.servers = ${?KAFKA_HOSTS}
        buffer.memory = 67108864
        client.id = ${?HOSTNAME}
        client.id = ${?KAFKA_CLIENT_ID}
        linger.ms = 1
        retries = 30
      }
    }
  }
}

example {
  api-codes {
    # System / General
    100001 = An XML parsing error has occurred
    100002 = A SQL exception has occurred
    100003 = Invalid limit query parameter
    100004 = Invalid offset query parameter
    100007 = Invalid date format was provided
    100008 = Some inputs do not meet expectation
    100009 = <Developer embedded error messages>
    100010 = An error occurred parsing JSON
    100011 = A number format error occurred
    100012 = An error occurred parsing JSON
    100013 = A client error occurred
    100014  = An object mapping error occurred
    100015 = A socket timeout occurred
    100016 = An illegal argument error has occurred
    100017 = An unknown error has occurred
  }

  environment = "test"
  environment = ${?APP_ENV}

  kafka {
    producer {
      create-movie-topic = "create-movie-v1"
      move-inventory-position-topic = ${?KAFKA_TOPIC_CREATE_MOVIE}

      tenant-id = "example-v1"
      tenant-id = ${?KAFKA_TENANT_ID}
    }
  }
}
